diff --git a/3rdparty/CMakeLists.txt b/3rdparty/CMakeLists.txt
index 1031b32ee..aa2b59a35 100644
--- a/3rdparty/CMakeLists.txt
+++ b/3rdparty/CMakeLists.txt
@@ -107,7 +107,7 @@ if (OE_TRUSTZONE)
       teec
       INTERFACE
         $<BUILD_INTERFACE:teec_imported>
-        $<INSTALL_INTERFACE:$<INSTALL_PREFIX>/${CMAKE_INSTALL_LIBDIR}/openenclave/optee/libteec/libteec.a>
+        $<INSTALL_INTERFACE:${CMAKE_INSTALL_LIBDIR}/openenclave/optee/libteec/libteec.a>
     )
 
     install(TARGETS teec EXPORT openenclave-targets)
diff --git a/3rdparty/musl/CMakeLists.txt b/3rdparty/musl/CMakeLists.txt
index 548542535..74ceea39a 100644
--- a/3rdparty/musl/CMakeLists.txt
+++ b/3rdparty/musl/CMakeLists.txt
@@ -117,9 +117,9 @@ target_include_directories(
   oelibc_includes
   INTERFACE
     $<BUILD_INTERFACE:$<$<COMPILE_LANGUAGE:CXX>:${LIBCXX_INCLUDES}>>
-    $<INSTALL_INTERFACE:$<$<COMPILE_LANGUAGE:CXX>:$<INSTALL_PREFIX>/${CMAKE_INSTALL_INCLUDEDIR}/openenclave/3rdparty/libcxx>>
+    $<INSTALL_INTERFACE:$<$<COMPILE_LANGUAGE:CXX>:${CMAKE_INSTALL_INCLUDEDIR}/openenclave/3rdparty/libcxx>>
     $<BUILD_INTERFACE:${MUSL_INCLUDES}>
-    $<INSTALL_INTERFACE:$<INSTALL_PREFIX>/${CMAKE_INSTALL_INCLUDEDIR}/openenclave/3rdparty/libc>
+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/openenclave/3rdparty/libc>
 )
 
 if (CMAKE_C_COMPILER_ID MATCHES GNU AND CMAKE_C_COMPILER_VERSION
diff --git a/cmake/apply_lvi_mitigation.cmake b/cmake/apply_lvi_mitigation.cmake
index a2ea40dab..057b1e3b7 100644
--- a/cmake/apply_lvi_mitigation.cmake
+++ b/cmake/apply_lvi_mitigation.cmake
@@ -4,12 +4,9 @@
 # Helper to obtain the version of glibc.
 macro (get_glibc_version)
   execute_process(
-    COMMAND ${CMAKE_C_COMPILER} -print-file-name=libc.so.6
-    OUTPUT_VARIABLE GLIBC_PATH
+    COMMAND bash "-c" "ldd --version | awk '/ldd/{print $NF}'"
+    OUTPUT_VARIABLE GLIBC_VERSION
     OUTPUT_STRIP_TRAILING_WHITESPACE)
-  get_filename_component(GLIBC_PATH ${GLIBC_PATH} REALPATH)
-  get_filename_component(GLIBC_VERSION ${GLIBC_PATH} NAME)
-  string(REGEX REPLACE "libc-(.*).so" \\1 GLIBC_VERSION ${GLIBC_VERSION})
   if (NOT GLIBC_VERSION MATCHES "^[0-9]+\.[0-9]+$")
     message(FATAL_ERROR "Glibc version is unknown: ${GLIBC_VERSION}")
   endif ()
diff --git a/include/CMakeLists.txt b/include/CMakeLists.txt
index 4bb3468ba..5dbfbb1d5 100644
--- a/include/CMakeLists.txt
+++ b/include/CMakeLists.txt
@@ -8,7 +8,7 @@ target_include_directories(
   oe_includes
   INTERFACE $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
             $<BUILD_INTERFACE:${OE_INCDIR}>
-            $<INSTALL_INTERFACE:$<INSTALL_PREFIX>/${CMAKE_INSTALL_INCLUDEDIR}>)
+            $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
 install(
   DIRECTORY openenclave/bits
   DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/openenclave/
diff --git a/scripts/lvi-mitigation/install_lvi_mitigation_bindir b/scripts/lvi-mitigation/install_lvi_mitigation_bindir
index 074456027..9fc16db87 100755
--- a/scripts/lvi-mitigation/install_lvi_mitigation_bindir
+++ b/scripts/lvi-mitigation/install_lvi_mitigation_bindir
@@ -15,43 +15,27 @@ trap 'echo "\"${last_command}\" command filed with exit code $?."' ERR
 script=$(readlink -f "$0")
 script_path=$(dirname "$script")
 curr_path=$(pwd)
-bin_name="lvi_mitigation_bin"
-read -rp "Do you want to install in current directory? [yes/no]: " ans
-if [[ "$ans" == "yes" ]]; then
-  install_path="$curr_path"
-else
-  read -rp "Please input the directory which you want to install in: " install_path
-fi
-
-if [[ "$install_path" == "" ]]; then
-  install_path="$curr_path"
-fi
-
-bin_path="$install_path"/"$bin_name"
-bin_path="${bin_path/#\~/$HOME}"
+bin_path="$out/bin"
 
 mkdir -p "$bin_path"
 
 cp "$script_path"/invoke_compiler "$bin_path"/invoke_compiler
 
-clang_versions=("" "-8" "-9" "-10")
-for version in "${clang_versions[@]}"; do
-  clang="clang$version"
-  if ! [ -x "$(command -v "$clang")" ]; then
-    continue
-  fi
-  clangcpp="clang++$version"
-  clang_path=$(command -v "$clang")
-  clangcpp_path=$(command -v "$clangcpp")
-  if [ "$clang_path" ] && [ "$clangcpp_path" ]; then
-    ln -sf "$clang_path" "$bin_path"/"$clang"_symlink
-    ln -sf "$clangcpp_path" "$bin_path"/"$clangcpp"_symlink
-    rm -f "$bin_path"/"$clang"
-    "$script_path"/generate_wrapper --name="$clang" --path="$bin_path"
-    rm -f "$bin_path"/"$clangcpp"
-    "$script_path"/generate_wrapper --name="$clangcpp" --path="$bin_path"
-  fi
-done
+clang="clang"
+if ! [ -x "$(command -v "$clang")" ]; then
+  continue
+fi
+clangcpp="clang++"
+clang_path=$(command -v "$clang")
+clangcpp_path=$(command -v "$clangcpp")
+if [ "$clang_path" ] && [ "$clangcpp_path" ]; then
+  ln -sf "$clang_path" "$bin_path"/"$clang"_symlink
+  ln -sf "$clangcpp_path" "$bin_path"/"$clangcpp"_symlink
+  rm -f "$bin_path"/"$clang"
+  "$script_path"/generate_wrapper --name="$clang" --path="$bin_path"
+  rm -f "$bin_path"/"$clangcpp"
+  "$script_path"/generate_wrapper --name="$clangcpp" --path="$bin_path"
+fi
 
 gcc_path=$(command -v gcc)
 gcpp_path=$(command -v g++)
@@ -64,22 +48,16 @@ if [ "$gcc_path" ] && [ "$gcpp_path" ]; then
   "$script_path"/generate_wrapper --name=g++ --path="$bin_path"
 fi
 
-# Obtain `as` and `ld` from Intel site.
-intel_site="https://download.01.org/intel-sgx/sgx-linux/"
-intel_tool_version="2.13"
-intel_tarball="as.ld.objdump.gold.r3.tar.gz"
-wget "$intel_site"/"$intel_tool_version"/"$intel_tarball" -O /tmp/"$intel_tarball"
-tar -xf /tmp/"$intel_tarball" -C /tmp
-
-intel_extract_path=external/toolset/ubuntu18.04
+intel_dir=intel-tarball
+intel_extract_path=toolset/ubuntu18.04
 rm -f "$bin_path"/as
-cp /tmp/"$intel_extract_path"/as "$bin_path"/as
+cp $intel_dir/"$intel_extract_path"/as "$bin_path"/as
 # The `ld` depends on glibc version 2.27.
 glibc_version=$(ldd --version | awk '/ldd/{print $NF}')
 # shellcheck disable=SC2072
 if [[ "$glibc_version" > "2.26" ]]; then
   rm -f "$bin_path"/ld
-  cp /tmp/"$intel_extract_path"/ld "$bin_path"/ld
+  cp $intel_dir/"$intel_extract_path"/ld "$bin_path"/ld
 fi
 
 echo "Installed: $bin_path"
diff --git a/scripts/lvi-mitigation/invoke_compiler b/scripts/lvi-mitigation/invoke_compiler
index 5a2ee6ec3..83bdce946 100755
--- a/scripts/lvi-mitigation/invoke_compiler
+++ b/scripts/lvi-mitigation/invoke_compiler
@@ -24,7 +24,7 @@ function call_compiler {
     done
 
     if [ $lvi_mitigation == 0 ]; then
-        /usr/bin/"$compiler" $@
+        "$compiler" $@
     else
         # Ensures that the compiler invokes customized
         # `as` and `ld` instead of default ones.
