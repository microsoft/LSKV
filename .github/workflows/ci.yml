name: "CI"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  ACR_REGISTRY: ccfmsrc.azurecr.io
  ACR_TOKEN_NAME: lskv-push-token
  DOCKER_BUILDKIT: 1 # https://docs.docker.com/develop/develop-images/build_enhancements/

jobs:
  build-and-test:
    runs-on: ubuntu-20.04
    container: mcr.microsoft.com/ccf/app/dev:3.0.0-rc1-virtual

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Make sure github workspace is git safe
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Build app
        run: make build-virtual

      - name: Install go
        run: curl -L -o go1.19.1.linux-amd64.tar.gz https://go.dev/dl/go1.19.1.linux-amd64.tar.gz && tar -C /usr/local -xzf go1.19.1.linux-amd64.tar.gz

      - name: Test app
        run: make tests

      - name: Test app (etcd integration tests)
        run: export PATH=$PATH:/usr/local/go/bin && make test-virtual
        continue-on-error: true

  build-docker-virtual:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build container
        run: docker build -t $ACR_REGISTRY/public/lskv:latest-virtual -f Dockerfile.virtual .

      - name: Log in to registry
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: docker login -u $ACR_TOKEN_NAME -p ${{ secrets.ACR_LSKV_PUSH_TOKEN_PASSWORD }} $ACR_REGISTRY

      - name: Push virtual image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: docker push $ACR_REGISTRY/public/lskv:latest-virtual

  build-docker-sgx:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build container
        run: docker build -t $ACR_REGISTRY/public/lskv:latest-sgx -f Dockerfile.sgx .

      - name: Log in to registry
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: docker login -u $ACR_TOKEN_NAME -p ${{ secrets.ACR_LSKV_PUSH_TOKEN_PASSWORD }} $ACR_REGISTRY

      - name: Push sgx image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: docker push $ACR_REGISTRY/public/lskv:latest-sgx

  checks:
    runs-on: ubuntu-latest
    container: ccfmsrc.azurecr.io/ccf/ci/sgx:oe-0.18.2-protoc

    steps:
      - name: Make sure github workspace is git safe
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run checks
        run: ./scripts/ci-checks.sh

  check-issues:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check issues
        run: ./scripts/check-issues.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
