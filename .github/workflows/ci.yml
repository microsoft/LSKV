name: "CI"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-app:
    runs-on: ubuntu-20.04
    container: mcr.microsoft.com/ccf/app/dev:3.0.0-dev6-sgx

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build app
        run: mkdir -p build && cd build && CC="/opt/oe_lvi/clang-10" CXX="/opt/oe_lvi/clang++-10" cmake -GNinja .. && ninja

  test-virtual:
    runs-on: ubuntu-20.04
    container: mcr.microsoft.com/ccf/app/dev:3.0.0-dev6-sgx

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Build app
        run: make build-virtual

      - name: Install go
        run: curl -L -o go1.19.1.linux-amd64.tar.gz https://go.dev/dl/go1.19.1.linux-amd64.tar.gz && tar -C /usr/local -xzf go1.19.1.linux-amd64.tar.gz

      - name: Test app
        run: export PATH=$PATH:/usr/local/go/bin && make test-virtual
        continue-on-error: true

  build-docker-virtual:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build container
        run: docker build -t lskv-virtual -f Dockerfile.virtual .

  build-docker-sgx:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build container
        run: docker build -t lskv-sgx -f Dockerfile.sgx .

  checks:
    runs-on: ubuntu-latest
    container: ccfmsrc.azurecr.io/ccf/ci/sgx:oe-0.18.2-protoc

    steps:
      - name: Make sure github workspace is git safe
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run checks
        run: ./scripts/ci-checks.sh