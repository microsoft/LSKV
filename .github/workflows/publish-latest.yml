name: "Publish latest"

on:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  ACR_REGISTRY: ccfmsrc.azurecr.io
  ACR_TOKEN_NAME: lskv-push-token
  DOCKER_BUILDKIT: 1 # https://docs.docker.com/develop/develop-images/build_enhancements/

jobs:
  publish-docker-virtual:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build container
        run: docker build -t $ACR_REGISTRY/public/lskv:latest-virtual -f Dockerfile.virtual .

      - name: Log in to registry
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: docker login -u $ACR_TOKEN_NAME -p ${{ secrets.ACR_LSKV_PUSH_TOKEN_PASSWORD }} $ACR_REGISTRY

      - name: Push virtual image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: docker push $ACR_REGISTRY/public/lskv:latest-virtual

  publish-docker-sgx:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build container
        run: docker build -t $ACR_REGISTRY/public/lskv:latest-sgx -f Dockerfile.sgx .

      - name: Log in to registry
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: docker login -u $ACR_TOKEN_NAME -p ${{ secrets.ACR_LSKV_PUSH_TOKEN_PASSWORD }} $ACR_REGISTRY

      - name: Push sgx image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: docker push $ACR_REGISTRY/public/lskv:latest-sgx

  publish-binaries:
    runs-on: ubuntu-20.04
    needs:
      - publish-docker-virtual
      - publish-docker-sgx
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download images
        run: |
          docker pull $ACR_REGISTRY/public/lskv:latest-virtual
          docker pull $ACR_REGISTRY/public/lskv:latest-sgx

      - name: Copy files out of images
        run: |
          docker create --name lskv-virtual $ACR_REGISTRY/public/lskv:latest-virtual
          docker cp lskv-virtual:/app/liblskv.virtual.so liblskv.virtual.so
          docker rm lskv-virtual

          docker create --name lskv-sgx $ACR_REGISTRY/public/lskv:latest-sgx
          docker cp lskv-sgx:/app/liblskv.enclave.so.signed liblskv.enclave.so.signed
          docker rm lskv-sgx

      - name: Tag latest-main
        run: |
          git tag latest-main
          git push --force origin latest-main

      - name: Publish latest release
        uses: softprops/action-gh-release@v1
        with:
          name: Latest main
          tag_name: latest-main
          prerelease: true
          files: |
            liblskv.virtual.so
            liblskv.enclave.so.signed
